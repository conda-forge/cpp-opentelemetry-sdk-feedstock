From 04d48f0dacaade5032faa5cddfb3880f285938d5 Mon Sep 17 00:00:00 2001
From: David Li <li.davidm96@gmail.com>
Date: Mon, 22 Jul 2024 00:46:15 -0400
Subject: [PATCH 1/4] cross_compile_grpc_cpp_plugin_path

---
 CMakeLists.txt                  |  8 ++++----
 cmake/opentelemetry-proto.cmake | 17 +++++++----------
 2 files changed, 11 insertions(+), 14 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 711ac14c..04963de6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -429,7 +429,10 @@ if(WITH_OTLP_GRPC
     endif()
   endif()
   # Latest Protobuf imported targets and without legacy module support
-  if(TARGET protobuf::protoc)
+  if(Protobuf_PROTOC_EXECUTABLE)
+    # Some versions of FindProtobuf.cmake uses mixed case instead of uppercase
+    set(PROTOBUF_PROTOC_EXECUTABLE ${Protobuf_PROTOC_EXECUTABLE})
+  elseif(TARGET protobuf::protoc)
     project_build_tools_get_imported_location(PROTOBUF_PROTOC_EXECUTABLE
                                               protobuf::protoc)
     # If protobuf::protoc is not a imported target, then we use the target
@@ -437,9 +440,6 @@ if(WITH_OTLP_GRPC
     if(NOT PROTOBUF_PROTOC_EXECUTABLE)
       set(PROTOBUF_PROTOC_EXECUTABLE protobuf::protoc)
     endif()
-  elseif(Protobuf_PROTOC_EXECUTABLE)
-    # Some versions of FindProtobuf.cmake uses mixed case instead of uppercase
-    set(PROTOBUF_PROTOC_EXECUTABLE ${Protobuf_PROTOC_EXECUTABLE})
   endif()
   include(CMakeDependentOption)
 
diff --git a/cmake/opentelemetry-proto.cmake b/cmake/opentelemetry-proto.cmake
index 62197068..41f1a6aa 100644
--- a/cmake/opentelemetry-proto.cmake
+++ b/cmake/opentelemetry-proto.cmake
@@ -207,16 +207,13 @@ foreach(IMPORT_DIR ${PROTOBUF_IMPORT_DIRS})
 endforeach()
 
 if(WITH_OTLP_GRPC)
-  if(CMAKE_CROSSCOMPILING)
-    find_program(gRPC_CPP_PLUGIN_EXECUTABLE grpc_cpp_plugin)
-  else()
-    if(TARGET gRPC::grpc_cpp_plugin)
-      project_build_tools_get_imported_location(gRPC_CPP_PLUGIN_EXECUTABLE
-                                                gRPC::grpc_cpp_plugin)
-    else()
-      find_program(gRPC_CPP_PLUGIN_EXECUTABLE grpc_cpp_plugin)
-    endif()
-  endif()
+  # When cross-compiling, look for the gRPC plugin
+  # next to the Protobuf compiler
+  get_filename_component(PROTOC_PATH ${PROTOBUF_PROTOC_EXECUTABLE} DIRECTORY)
+  find_program(gRPC_CPP_PLUGIN_EXECUTABLE grpc_cpp_plugin
+               HINTS ${PROTOC_PATH}
+               NO_CMAKE_PATH
+               NO_CMAKE_ENVIRONMENT_PATH)
   message(STATUS "gRPC_CPP_PLUGIN_EXECUTABLE=${gRPC_CPP_PLUGIN_EXECUTABLE}")
 endif()
 
