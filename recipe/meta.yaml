# code: language: jinja-yaml
{% set name = "cpp-opentelemetry-sdk" %}
{% set version = "1.8.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/open-telemetry/opentelemetry-cpp/archive/refs/tags/v{{ version }}.tar.gz
    sha256: b23d3c80d2e0012734ea343d2be69b2a7139ec5545453c503b13e629eb8fbe05
    patches:
      - cross_compile_grpc_cpp_plugin_path.patch  # [build_platform != target_platform]

build:
  number: 0
  always_include_files:
    # Must overwrite the ones installed by cpp-opentelemetry-api
    - lib/cmake/opentelemetry-cpp/  # [unix]
    - Library/lib/cmake/opentelemetry-cpp/  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake >=3.1
    - ninja
    - proto-opentelemetry-proto =0.19.0

    # For cross-compiling
    - curl                    # [build_platform != target_platform]
    - libgrpc                 # [build_platform != target_platform]
    - libprotobuf             # [build_platform != target_platform]
    - nlohmann_json >=3.10.5  # [build_platform != target_platform]
    - zlib                    # [build_platform != target_platform]
    - prometheus-cpp          # [build_platform != target_platform] 
  host:
    # -api and -sdk packages of different versions are not necessarily
    # compatible.
    - cpp-opentelemetry-api ={{ version }}
    - curl
    - libgrpc
    - libprotobuf
    - nlohmann_json >=3.10.5
    - zlib
    - prometheus-cpp
  run:
    - cpp-opentelemetry-api ={{ version }}
    - curl
    - nlohmann_json
    - prometheus-cpp

test:
  commands:
    - test -d $PREFIX/include/opentelemetry/sdk/  # [unix]
    - test -d $PREFIX/lib/cmake/opentelemetry-cpp/  # [unix]
    - test -f $PREFIX/lib/cmake/opentelemetry-cpp/opentelemetry-cpp-config.cmake  # [unix]
    - test -f $PREFIX/lib/libopentelemetry_common.a  # [unix]
    - test -f $PREFIX/lib/libopentelemetry_exporter_otlp_grpc.a  # [unix]
    - if not exist %LIBRARY_INC%\opentelemetry\sdk exit 1  # [win]
    - if not exist %LIBRARY_LIB%\cmake\opentelemetry-cpp exit 1  # [win]
    - if not exist %LIBRARY_LIB%\cmake\opentelemetry-cpp\opentelemetry-cpp-config.cmake exit 1  # [win]
    - if not exist %LIBRARY_LIB%\opentelemetry_common.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%\opentelemetry_exporter_otlp_grpc.lib exit 1  # [win]

about:
  home: https://github.com/open-telemetry/opentelemetry-cpp
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: The OpenTelemetry C++ Client
  description: |
    OpenTelemetry is a collection of tools, APIs, and SDKs. Use it to
    instrument, generate, collect, and export telemetry data (metrics,
    logs, and traces) to help you analyze your softwareâ€™s performance
    and behavior.
  doc_url: https://opentelemetry.io/docs/instrumentation/cpp/
  dev_url: https://github.com/open-telemetry/opentelemetry-cpp

extra:
  recipe-maintainers:
    - lidavidm
